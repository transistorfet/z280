
* should you use an MC68692 Serial Controller or something instead of the CPLD, or replace it with the 84 pin PLCC and hook up
  address and data pins (at least 8 data bits) to the I/O, so that you can emulate simple I/O
* CPLD could act as both an interrupt controller and bus coordinator (or rather, the local bus coordinator, where the global
  coordinator would be on the backplane).  This would be if you were trying the multiprocessor feature


* try using interrupts for serial to hopefully transfer data faster than otherwise

* the CPU reads the first 4 bytes of RAM as FFFF FFFF, which seems to still work because there are no other instructions, no int
  handlers that could get in the way, so it still executes code as expected
  Not sure if this is solved now? ^^
* boot in the monitor doesn't work, compiler error so it's commented out
* printf is sometimes glitchy


* to use the arduino, you'd really need to add a flip-flop for the wait state, which the arduino could manually activate via a pin
  on the control signals 40-pin connector to enable latching, but I'm mostly past the need for the arduino besides programming


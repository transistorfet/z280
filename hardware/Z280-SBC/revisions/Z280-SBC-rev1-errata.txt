
Revision 1 Errata and Notes
===========================

- Power connectors are upside-down (ground on top), and are unlabelled

- Somehow I managed to rotate the footprint for the flash chip.  Pin 1 is the bottom right corner instead of the top left.
  It should be possible to rotate the chip and get it working, but I've already mounted the chip the wrong way, and it's
  heated up quite a bit as a result.  Removing and rotating the chip fixed the issue.  It might not be as reliable as it
  should be, but the reversed chip does seem to be working most of the time

- I messed up the logic for latching the addresses with 74LVC573s.  It's actually positive logic, so a high on the LE
  line of the will load the data bus into the address bus.  /AS is wired to it because we want it to latch only when /AS
  is low (address an AD bus is valid), which is backwards.  It needs to be inverted before going into LE. 

- the tty connector is rotated 180 degrees, such that the FTDI boards I have must go inward, towards the CPU instead of
  outward from the board.  It's probably because I copied the k30, and that one was already rotated 90 from the usual
  position, to come out of the top of the board

- there seems to be a problem with Timer1 running off the CPU clock when used as the UART clock.  It seems to glitch no
  matter what, when receiving data, regardless of the configuration of Timer1 or the UART .  An external clock wired to
  Timer1 input fixes the issue, but I've repurposed the alternate clock's inverters to fix the latches, so the clock is on
  an external breadboad.

- I put CTIN1 and CTIN2 onto input-only pins of the CPLD, when they should be output pins (input to the CPU, output from
  the CPLD).  I need to use CTIN1 as the alternate clock input

- the CPLD is kind of useless because it doesn't have any extra I/O pins that could be hooked up to other devices, such
  as an I2C connection to other devices, or chip select lines to index devices based on the address lines.  I probably
  should have put the bigger PLCC84 chip on and wired the extra I/O to generic header pins.  Maybe included the data bus
  so that simple I/O devices could be emulated, but that might require too many macrocells and would be better for an FPGA

